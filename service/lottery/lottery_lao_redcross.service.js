const axios = require("axios");
const LotteryLaoRedcross = require("../../models/lottery_lao_redcross.model");

const apiUrl = 'https://test-lotto-scraper.wnimqo.easypanel.host/api/lottery/lao-redcross/latest';

const fetchAndSaveLaoRedcrossLottery = async () => {
  try {
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ñ‡πâ‡∏≤‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏´‡∏ß‡∏¢‡∏≠‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏û‡∏≠‡∏µ‡∏Å
    const today = new Date();
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 00:00:00 ‡∏Å‡πá‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏≤‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    const existingLottery = await LotteryLaoRedcross.findOne({
      createdAt: {
        $gte: new Date(today.setHours(0, 0, 0, 0)),
        $lt: new Date(today.setHours(23, 59, 59, 999)),
      },
    });

    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏´‡∏ß‡∏¢‡∏≠‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏°‡∏µ "xxx") ‡πÉ‡∏´‡πâ return ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°
    if (existingLottery && existingLottery.results) {
      const hasIncompleteResults = Object.values(existingLottery.results).some(value => {
        if (typeof value === 'string') {
          return value.includes('xxx') || value.includes('xx') || value === "" || value === null || value === undefined;
        }
        return value === null || value === undefined;
      });
      
      if (!hasIncompleteResults) {
        console.log(`‚úÖ ‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‡∏î ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó`);
        return existingLottery;
      }
      
      console.log(`‚è≥ ‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‡∏î ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö ‡∏à‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÉ‡∏´‡∏°‡πà`);
    }

    const response = await axios.get(
      apiUrl
    );
    const { data } = response.data;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ú‡∏•‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!data.results || !data.results.digit5 || data.results.digit5 === "xxxx") {
      throw new Error(
        `Failed to fetch and save Lao Redcross lottery: ‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‡∏î‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏ú‡∏•`
      );
    }

    // ‚û§ ‡∏´‡∏≤ 3 ‡∏ï‡∏±‡∏ß‡∏ö‡∏ô
    let threeTop = "";
    if (data.results.digit3) {
      threeTop = data.results.digit3;
    }
    
    // ‚û§ ‡∏´‡∏≤ 3 ‡∏ï‡∏±‡∏ß‡πÇ‡∏ï‡πä‡∏î
    let threeToad = [];
    if (threeTop) {
      const digits = threeTop.split("");
      const perms = new Set();

      const permute = (arr, m = []) => {
        if (arr.length === 0) {
          perms.add(m.join(""));
        } else {
          for (let i = 0; i < arr.length; i++) {
            const curr = arr.slice();
            const next = curr.splice(i, 1);
            permute(curr.slice(), m.concat(next));
          }
        }
      };

      permute(digits);
      threeToad = [...perms];
    }

    // ‚û§ ‡∏´‡∏≤ 2 ‡∏ï‡∏±‡∏ß‡∏ö‡∏ô
    let twoTop = "";
    if (data.results.digit2_top) {
      twoTop = data.results.digit2_top;
    }

    // ‚û§ ‡∏´‡∏≤ 2 ‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á
    let twoBottom = "";
    if (data.results.digit2_bottom) {
      twoBottom = data.results.digit2_bottom;
    }

    // ‚û§ ‡∏´‡∏≤ 2 ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡πÄ‡∏®‡∏©
    let twoSpecial = "";
    if (data.results.digit2_special) {
      twoSpecial = data.results.digit2_special;
    }
    
    // ‚û§ 1 ‡∏ï‡∏±‡∏ß‡∏ö‡∏ô (‡∏ß‡∏¥‡πà‡∏á‡∏ö‡∏ô ‡∏à‡∏≤‡∏Å digit3)
    let oneTop = "";
    if (data.results.digit3 && data.results.digit3.length === 3) {
      oneTop = data.results.digit3.split("").join(","); // ‡πÄ‡∏ä‡πà‡∏ô "334" ‚Üí "3,3,4"
    }

    // ‚û§ 1 ‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á (‡∏ß‡∏¥‡πà‡∏á‡∏•‡πà‡∏≤‡∏á ‡∏à‡∏≤‡∏Å digit2_bottom)
    let oneBottom = "";
    if (data.results.digit2_bottom && data.results.digit2_bottom.length === 2) {
      oneBottom = data.results.digit2_bottom.split("").join(","); // ‡πÄ‡∏ä‡πà‡∏ô "87" ‚Üí "8,7"
    }

    // ‚û§ 1 ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤ (‡∏ß‡∏¥‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏à‡∏≤‡∏Å digit1)
    let oneFront = "";
    if (data.results.digit1) {
      oneFront = data.results.digit1; // ‡πÄ‡∏ä‡πà‡∏ô "4"
    }

    const lotteryData = {
      name: data.name || "lao-lottery",
      url: data.url || "https://api.lao-redcross.com",
      lotto_date: data.lotto_date,
      lottery_name: data.lotteryName || "‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‡∏î",
      start_spin: new Date(data.start_spin),
      show_result: new Date(data.show_result),
      results: {
        digit5: data.results.digit5,
        digit4: data.results.digit4,
        digit3: data.results.digit3,
        digit2_top: data.results.digit2_top,
        digit1: data.results.digit1,
        digit2_bottom: data.results.digit2_bottom,
        digit2_special: data.results.digit2_special,
      },
      betting_types: [
        {
          code: "3top",
          name: "3 ‡∏ï‡∏±‡∏ß‡∏ö‡∏ô",
          digit: threeTop,
        },
        {
          code: "3toad",
          name: "3 ‡∏ï‡∏±‡∏ß‡πÇ‡∏ï‡πä‡∏î",
          digit: threeToad.join(","),
        },
        {
          code: "2top",
          name: "2 ‡∏ï‡∏±‡∏ß‡∏ö‡∏ô",
          digit: twoTop,
        },
        {
          code: "2bottom",
          name: "2 ‡∏ï‡∏±‡∏ß‡∏•‡πà‡∏≤‡∏á",
          digit: twoBottom,
        },
        {
          code: "2special",
          name: "2 ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡πÄ‡∏®‡∏©",
          digit: twoSpecial,
        },
        {
          code: "1top",
          name: "‡∏ß‡∏¥‡πà‡∏á‡∏ö‡∏ô",
          digit: oneTop,
        },
        {
          code: "1bottom",
          name: "‡∏ß‡∏¥‡πà‡∏á‡∏•‡πà‡∏≤‡∏á",
          digit: oneBottom,
        },
        {
          code: "1front",
          name: "‡∏ß‡∏¥‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤",
          digit: oneFront,
        },
      ],
      scraper: data.scraper || "lao-redcross",
      scrapedAt: data.scrapedAt ? new Date(data.scrapedAt) : null,
    };

    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    let lottery;
    if (existingLottery) {
      lottery = await LotteryLaoRedcross.findByIdAndUpdate(
        existingLottery._id,
        lotteryData,
        { new: true }
      );
      console.log(`üîÑ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‡∏î ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ`);
    } else {
      lottery = new LotteryLaoRedcross(lotteryData);
      await lottery.save();
      console.log(`üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‡∏î ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡∏°‡πà`);
    }
    return lottery;
  } catch (error) {
    throw new Error(`Failed to fetch and save Lao Redcross lottery: ${error.message}`);
  }
};

const getAllLaoRedcrossLottery = async ({ page, limit, startDate, endDate }) => {
  try {
    const query = {};

    // Add date range filter if provided
    if (startDate || endDate) {
      query.createdAt = {};
      if (startDate) {
        query.createdAt.$gte = new Date(startDate);
      }
      if (endDate) {
        query.createdAt.$lte = new Date(endDate);
      }
    }

    // Calculate skip value for pagination
    const skip = (page - 1) * limit;

    // Get total count for pagination
    const total = await LotteryLaoRedcross.countDocuments(query);

    // Get data with pagination
    const data = await LotteryLaoRedcross.find(query)
      .sort({ createdAt: -1 })
      .skip(skip)
      .limit(limit);

    return {
      data,
      total,
    };
  } catch (error) {
    console.error("Error in getAllLaoRedcrossLottery service:", error);
    throw new Error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ß‡∏¢‡∏•‡∏≤‡∏ß‡∏Å‡∏≤‡∏ä‡∏≤‡∏î");
  }
};

module.exports = {
  fetchAndSaveLaoRedcrossLottery,
  getAllLaoRedcrossLottery,
};
